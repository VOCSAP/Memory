<?xml version="1.0" encoding="utf-8"?>
<nugget name="ZCL_RUNTIME_AND_MEMORY_UTIL">
 <DTEL ROLLNAME="ZTEC_TRACE_RUNTIME" DOMNAME="FLAG" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="15" SCRLEN3="23" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_TRACE_NO" DOMNAME="INT4" ROUTPUTLEN="000000" HEADLEN="18" SCRLEN1="10" SCRLEN2="11" SCRLEN3="18" AUTHCLASS="00" DTELMASTER="F" DATATYPE="INT4" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" SIGNFLAG="X" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_TRACE_MEMORY" DOMNAME="FLAG" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="15" SCRLEN3="25" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_SEQNR" DOMNAME="SEQNR" ROUTPUTLEN="000000" HEADLEN="18" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000003" DECIMALS="000000" OUTPUTLEN="000003" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_DESCRIPTION" DOMNAME="CHAR50" ROUTPUTLEN="000000" HEADLEN="50" SCRLEN1="10" SCRLEN2="17" SCRLEN3="23" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000050" DECIMALS="000000" OUTPUTLEN="000050" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_GUID_RUNTIME" DOMNAME="SYSUUID_X16" ROUTPUTLEN="000000" HEADLEN="15" SCRLEN1="04" SCRLEN2="09" SCRLEN3="15" AUTHCLASS="00" DTELMASTER="F" DATATYPE="RAW" LENG="000016" DECIMALS="000000" OUTPUTLEN="000032" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_ID" DOMNAME="CHAR20" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000020" DECIMALS="000000" OUTPUTLEN="000020" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_OBJECT_ID" DOMNAME="CHAR45" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="08" SCRLEN2="08" SCRLEN3="17" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000045" DECIMALS="000000" OUTPUTLEN="000045" REFKIND="D">
  <tpara/>
 </DTEL>
 <TABL TABNAME="ZTEC_T_TRACE" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" AUTHCLASS="00" CONTFLAG="A" PROZPUFF="000" EXCLASS="1">
  <dd09l TABNAME="ZTEC_T_TRACE" AS4LOCAL="A" AS4VERS="0000" TABKAT="1" TABART="APPL1" SCHFELDANZ="000" BUFALLOW="N" ROWORCOLST="C"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="GUID_RUNTIME" POSITION="0002" KEYFLAG="X" ROLLNAME="ZTEC_GUID_RUNTIME" ADMINFIELD="0" INTTYPE="X" INTLEN="000016" NOTNULL="X" DOMNAME="SYSUUID_X16" ROUTPUTLEN="000000" HEADLEN="15" SCRLEN1="04" SCRLEN2="09" SCRLEN3="15" DTELMASTER="F" DATATYPE="RAW" LENG="000016" OUTPUTLEN="000032" DECIMALS="000000" MASK="  RAW E" MASKLEN="0000" DOMNAME3L="SYSUUID_X16" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="TRACE_NO" POSITION="0003" KEYFLAG="X" ROLLNAME="ZTEC_TRACE_NO" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" NOTNULL="X" DOMNAME="INT4" ROUTPUTLEN="000000" HEADLEN="18" SCRLEN1="10" SCRLEN2="11" SCRLEN3="18" DTELMASTER="F" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" SIGNFLAG="X" MASK="  INT4E" MASKLEN="0000" DOMNAME3L="INT4" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="ID" POSITION="0004" ROLLNAME="ZTEC_ID" ADMINFIELD="0" INTTYPE="C" INTLEN="000040" DOMNAME="CHAR20" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000020" OUTPUTLEN="000020" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DOMNAME3L="CHAR20" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="SEQNR" POSITION="0005" ROLLNAME="ZTEC_SEQNR" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" DOMNAME="SEQNR" ROUTPUTLEN="000000" HEADLEN="18" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DOMNAME3L="SEQNR" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="TIME_START" DDLANGUAGE="E" POSITION="0006" ROLLNAME="TIMESTAMP" ADMINFIELD="0" INTTYPE="P" INTLEN="000008" DOMNAME="TZNTSTMPS" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DEC" LENG="000015" OUTPUTLEN="000019" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="UTC Time Stamp in Short Form (YYYYMMDDhhmmss)" REPTEXT="Time Stamp" SCRTEXT_S="Time Stamp" SCRTEXT_M="Time Stamp" SCRTEXT_L="Time Stamp" DOMMASTER="D" DOMNAME3L="TZNTSTMPS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="TIME_STOP" DDLANGUAGE="E" POSITION="0007" ROLLNAME="TIMESTAMP" ADMINFIELD="0" INTTYPE="P" INTLEN="000008" DOMNAME="TZNTSTMPS" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DEC" LENG="000015" OUTPUTLEN="000019" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="UTC Time Stamp in Short Form (YYYYMMDDhhmmss)" REPTEXT="Time Stamp" SCRTEXT_S="Time Stamp" SCRTEXT_M="Time Stamp" SCRTEXT_L="Time Stamp" DOMMASTER="D" DOMNAME3L="TZNTSTMPS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="RTIME_START" POSITION="0008" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000000" DECIMALS="000000" MASK="  INT4" MASKLEN="0000" DEPTH="00" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="RTIME_END" POSITION="0009" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000000" DECIMALS="000000" MASK="  INT4" MASKLEN="0000" DEPTH="00" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="RTIME_DURATION" POSITION="0010" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000000" DECIMALS="000000" MASK="  INT4" MASKLEN="0000" DEPTH="00" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="MEM_BEFORE" DDLANGUAGE="E" POSITION="0011" ROLLNAME="ABAP_MSIZE" ADMINFIELD="0" INTTYPE="P" INTLEN="000011" DOMNAME="ABAP_MSIZE" ROUTPUTLEN="000000" HEADLEN="29" SCRLEN1="10" SCRLEN2="14" SCRLEN3="29" DTELMASTER="D" DATATYPE="DEC" LENG="000020" OUTPUTLEN="000026" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="DEC type that is suitable for 64 bit integer" REPTEXT="64 Bit Integer with Prefix" SCRTEXT_S="64 Bit Int" SCRTEXT_M="64 Bit Integer" SCRTEXT_L="64 Bit Integer with Prefix" DOMNAME3L="ABAP_MSIZE" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="MEM_AFTER" DDLANGUAGE="E" POSITION="0012" ROLLNAME="ABAP_MSIZE" ADMINFIELD="0" INTTYPE="P" INTLEN="000011" DOMNAME="ABAP_MSIZE" ROUTPUTLEN="000000" HEADLEN="29" SCRLEN1="10" SCRLEN2="14" SCRLEN3="29" DTELMASTER="D" DATATYPE="DEC" LENG="000020" OUTPUTLEN="000026" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="DEC type that is suitable for 64 bit integer" REPTEXT="64 Bit Integer with Prefix" SCRTEXT_S="64 Bit Int" SCRTEXT_M="64 Bit Integer" SCRTEXT_L="64 Bit Integer with Prefix" DOMNAME3L="ABAP_MSIZE" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="MEM_ALLOCATED" DDLANGUAGE="E" POSITION="0013" ROLLNAME="ABAP_MSIZE" ADMINFIELD="0" INTTYPE="P" INTLEN="000011" DOMNAME="ABAP_MSIZE" ROUTPUTLEN="000000" HEADLEN="29" SCRLEN1="10" SCRLEN2="14" SCRLEN3="29" DTELMASTER="D" DATATYPE="DEC" LENG="000020" OUTPUTLEN="000026" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="DEC type that is suitable for 64 bit integer" REPTEXT="64 Bit Integer with Prefix" SCRTEXT_S="64 Bit Int" SCRTEXT_M="64 Bit Integer" SCRTEXT_L="64 Bit Integer with Prefix" DOMNAME3L="ABAP_MSIZE" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="OBJECT_ID" POSITION="0014" ROLLNAME="ZTEC_OBJECT_ID" ADMINFIELD="0" INTTYPE="C" INTLEN="000090" DOMNAME="CHAR45" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="08" SCRLEN2="08" SCRLEN3="17" DTELMASTER="F" DATATYPE="CHAR" LENG="000045" OUTPUTLEN="000045" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DOMNAME3L="CHAR45" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="DESCRIPTION" POSITION="0015" ROLLNAME="ZTEC_DESCRIPTION" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" DOMNAME="CHAR50" ROUTPUTLEN="000000" HEADLEN="50" SCRLEN1="10" SCRLEN2="17" SCRLEN3="23" DTELMASTER="F" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DOMNAME3L="CHAR50" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="EXEC_BY" DDLANGUAGE="E" POSITION="0016" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="User Name" REPTEXT="User Name" SCRTEXT_S="User" SCRTEXT_M="User Name" SCRTEXT_L="User Name" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="EXEC_DATE" DDLANGUAGE="E" POSITION="0017" ROLLNAME="DATUM" ADMINFIELD="0" INTTYPE="D" INTLEN="000016" DOMNAME="DATUM" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="05" SCRLEN2="05" SCRLEN3="05" DTELMASTER="D" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="Date" SCRTEXT_S="Date" SCRTEXT_M="Date" SCRTEXT_L="Date" DOMNAME3L="DATUM" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_TRACE" FIELDNAME="EXEC_TIME" DDLANGUAGE="E" POSITION="0018" ROLLNAME="UZEIT" ADMINFIELD="0" INTTYPE="T" INTLEN="000012" DOMNAME="UZEIT" ROUTPUTLEN="000000" HEADLEN="08" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DATATYPE="TIMS" LENG="000006" OUTPUTLEN="000008" DECIMALS="000000" MASK="  TIMSE" MASKLEN="0000" DDTEXT="Time" REPTEXT="Time" SCRTEXT_S="Time" SCRTEXT_M="Time" SCRTEXT_L="Time" DOMNAME3L="UZEIT" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZTEC_TRACE_CONF" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" AUTHCLASS="00" MAINFLAG="X" CONTFLAG="A" PROZPUFF="000" EXCLASS="1">
  <dd09l TABNAME="ZTEC_TRACE_CONF" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL1" PUFFERUNG="X" SCHFELDANZ="000" BUFALLOW="X"/>
  <dd03p TABNAME="ZTEC_TRACE_CONF" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_TRACE_CONF" FIELDNAME="PROGRAMM" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="PROGRAMM" ADMINFIELD="0" INTTYPE="C" INTLEN="000080" NOTNULL="X" DOMNAME="PROGRAMM" ROUTPUTLEN="000000" MEMORYID="RID" HEADLEN="08" SCRLEN1="08" SCRLEN2="12" SCRLEN3="12" DTELMASTER="D" DATATYPE="CHAR" LENG="000040" OUTPUTLEN="000040" DECIMALS="000000" ENTITYTAB="TRDIR" MASK="  CHARE" MASKLEN="0000" DDTEXT="ABAP Program Name" REPTEXT="Program" SCRTEXT_S="Program" SCRTEXT_M="Program Name" SCRTEXT_L="Program Name" DOMNAME3L="PROGRAMM" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_TRACE_CONF" FIELDNAME="TRACE_RUNTIME" POSITION="0003" ROLLNAME="ZTEC_TRACE_RUNTIME" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="FLAG" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="15" SCRLEN3="23" DTELMASTER="F" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DOMNAME3L="FLAG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_TRACE_CONF" FIELDNAME="TRACE_MEMORY" POSITION="0004" ROLLNAME="ZTEC_TRACE_MEMORY" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="FLAG" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="15" SCRLEN3="25" DTELMASTER="F" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DOMNAME3L="FLAG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_TRACE_CONF" FIELDNAME="TAKE_MEMORY_SNAPSHOT" POSITION="0005" ROLLNAME="ZTEC_TAKE_MEMORY_SNAPSHOT" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="FLAG" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="15" SCRLEN3="25" DTELMASTER="F" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DOMNAME3L="FLAG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <CLAS CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" VERSION="1" LANGU="F" DESCRIPT="Classe mesure temps de traitement/occupat° mémoire Singleton" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <types CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="TY_LINK_PROGRAMM_SINGLETON" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="4 " SRCCOLUMN1="4 " SRCROW2="7 " SRCCOLUMN2="38 " TYPESRC_LENG="168 " TYPESRC="BEGIN OF ty_link_programm_singleton,
      programm     TYPE ztec_trace_conf-programm,
      singleton_id TYPE sysuuid_x16,
    END OF   ty_link_programm_singleton
"/>
  <types CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="TY_T_LINK_PROGRAMM_SINGLETON" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="4 " SRCROW2="10 " SRCCOLUMN2="93 " TYPESRC_LENG="174 " TYPESRC="ty_t_link_programm_singleton TYPE SORTED TABLE OF ty_link_programm_singleton
                                               WITH UNIQUE KEY primary_key COMPONENTS programm
"/>
  <types CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="TY_RUNTIME_COLLECTION" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="12 " SRCCOLUMN1="4 " SRCROW2="15 " SRCCOLUMN2="33 " TYPESRC_LENG="180 " TYPESRC="BEGIN OF ty_runtime_collection,
      singleton_id       TYPE sysuuid_x16,
      singleton_instance TYPE REF TO zcl_runtime_and_memory_util,
    END OF   ty_runtime_collection
"/>
  <types CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="TY_T_RUNTIME_COLLECTION" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="4 " TYPTYPE="4" SRCROW1="17 " SRCCOLUMN1="4 " SRCROW2="18 " SRCCOLUMN2="89 " TYPESRC_LENG="160 " TYPESRC="ty_t_runtime_collection TYPE SORTED TABLE OF ty_runtime_collection
                                       WITH UNIQUE KEY primary_key COMPONENTS singleton_id
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="GT_LINK_PROGRAMM_SINGLETON" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_T_LINK_PROGRAMM_SINGLETON" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="GT_RUNTIME_COLLECTION" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_T_RUNTIME_COLLECTION" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="GET_INSTANCE" VERSION="1" LANGU="F" DESCRIPT="Récupération instance Trace" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="GET_INSTANCE" SCONAME="IV_PROGRAMM" VERSION="1" LANGU="F" DESCRIPT="Nom du programme ABAP" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CLIKE" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="GET_INSTANCE" SCONAME="IV_SINGLETON_ID" VERSION="1" LANGU="F" DESCRIPT="ID Singleton" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SYSUUID_X16" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="GET_INSTANCE" SCONAME="IV_TRACE_DURATION" VERSION="1" LANGU="F" DESCRIPT="Trace Durée ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="GET_INSTANCE" SCONAME="IV_TRACE_MEMORY" VERSION="1" LANGU="F" DESCRIPT="Trace Mémoire ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="GET_INSTANCE" SCONAME="RO_RUNTIME" VERSION="1" LANGU="F" DESCRIPT="Classe utilitaire pour temps de traitement/occupat° mémoire" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_RUNTIME_AND_MEMORY_UTIL"/>
   <exception CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="GET_INSTANCE" SCONAME="CX_SY_CREATE_OBJECT_ERROR" VERSION="1" LANGU="F" DESCRIPT="System-Exception Creating Data" MTDTYPE="0" EDITORDER="1 "/>
   <source>*&amp;---------------------------------------------------------------------*
*&amp; Programme    : Classe trace version Singleton                       *
*&amp; Description  : Création instance Trace via table ZTEC_TRACE_CONF    *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *
METHOD get_instance.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_runtime_collection TYPE zcl_runtime_and_memory_util_st=&gt;ty_runtime_collection.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_cx_object_error TYPE REF TO cx_sy_create_object_error.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
  FIELD-SYMBOLS :
    &lt;lfs_s_runtime_collection&gt; TYPE zcl_runtime_and_memory_util_st=&gt;ty_runtime_collection.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Retourne l&apos;instance Singleton (création si nécessaire)
  &quot; -----------------------------------------------------------

  &quot; Création nouvel instance Singleton
  IF iv_programm IS SUPPLIED.
    TRY.
        &quot; Récupération de l&apos;instance associé au programme
        READ TABLE zcl_runtime_and_memory_util_st=&gt;gt_runtime_collection ASSIGNING &lt;lfs_s_runtime_collection&gt;
                                                                    WITH TABLE KEY singleton_id = zcl_runtime_and_memory_util_st=&gt;link_progamm_singleton_id_get( iv_programm ).
        IF sy-subrc EQ 0.
          &quot; Retourne l&apos;instance existante
          ro_runtime = &lt;lfs_s_runtime_collection&gt;-singleton_instance.

        ENDIF.

      CATCH cx_sy_no_current_match.
        &quot; Pas de correspondance

    ENDTRY.

    IF NOT ro_runtime IS BOUND.
      TRY.
          &quot; Création instance via Table Paramétrage
          ro_runtime = zcl_runtime_and_memory_util=&gt;create_runtime_util( iv_programm ).

          &quot; Ajout de l&apos;instance
          ls_runtime_collection-singleton_id       = ro_runtime-&gt;gv_runtime_id.
          ls_runtime_collection-singleton_instance = ro_runtime.
          INSERT ls_runtime_collection INTO TABLE zcl_runtime_and_memory_util_st=&gt;gt_runtime_collection.

          &quot; Création d&apos;un nouveau lien
          zcl_runtime_and_memory_util_st=&gt;link_progamm_singleton_id_set( iv_programm = iv_programm
                                                                         iv_singleton_id = ro_runtime-&gt;gv_runtime_id
                                                                        ).

        CATCH cx_sy_create_object_error INTO lo_cx_object_error.
          &quot; Erreur création instance
          &quot;&quot;  --&gt; Lève une exception
          RAISE EXCEPTION TYPE cx_sy_create_object_error
            EXPORTING
              previous = lo_cx_object_error.

      ENDTRY.

    ENDIF.

  ELSEIF iv_singleton_id IS SUPPLIED.
    &quot; Récupération de l&apos;instance associé a l&apos;ID
    READ TABLE zcl_runtime_and_memory_util_st=&gt;gt_runtime_collection ASSIGNING &lt;lfs_s_runtime_collection&gt;
                                                                WITH TABLE KEY singleton_id = iv_singleton_id.
    IF sy-subrc EQ 0.
      &quot; Retourne l&apos;instance existante
      ro_runtime = &lt;lfs_s_runtime_collection&gt;-singleton_instance.

    ELSE.
      TRY.
          &quot; Création instance via Table Paramétrage
          CREATE OBJECT ro_runtime
            EXPORTING
              iv_runtime_id     = iv_singleton_id
              iv_trace_memory   = iv_trace_memory
              iv_trace_duration = iv_trace_duration.

          &quot; Ajout de l&apos;instance
          ls_runtime_collection-singleton_id       = iv_singleton_id.
          ls_runtime_collection-singleton_instance = ro_runtime.
          INSERT ls_runtime_collection INTO TABLE zcl_runtime_and_memory_util_st=&gt;gt_runtime_collection.

        CATCH cx_sy_create_object_error INTO lo_cx_object_error.
          &quot; Erreur création instance
          &quot;&quot;  --&gt; Lève une exception
          RAISE EXCEPTION TYPE cx_sy_create_object_error
            EXPORTING
              previous = lo_cx_object_error.

      ENDTRY.

    ENDIF.

  ELSE.
    &quot; Aucun paramètre
    &quot;&quot;  --&gt; Lève une Exception
    RAISE EXCEPTION TYPE cx_sy_create_object_error.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="LINK_PROGAMM_SINGLETON_ID_GET" VERSION="1" LANGU="F" DESCRIPT="Récupération ID Trace" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="LINK_PROGAMM_SINGLETON_ID_GET" SCONAME="IV_PROGRAMM" VERSION="1" LANGU="F" DESCRIPT="ID Programme" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CLIKE"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="LINK_PROGAMM_SINGLETON_ID_GET" SCONAME="RV_SINGLETON_ID" VERSION="1" LANGU="F" DESCRIPT="ID Singleton" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SYSUUID_X16"/>
   <exception CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="LINK_PROGAMM_SINGLETON_ID_GET" SCONAME="CX_SY_NO_CURRENT_MATCH" VERSION="1" LANGU="F" DESCRIPT="Exception Class Missing Match" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD LINK_PROGAMM_SINGLETON_ID_GET.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Récupération ID correspondant au Programme
  &quot; -----------------------------------------------------------

  READ TABLE zcl_runtime_and_memory_util_st=&gt;gt_link_programm_singleton
   ASSIGNING FIELD-SYMBOL(&lt;lfs_s_link_programm&gt;)
           WITH TABLE KEY programm = iv_programm.
  IF sy-subrc EQ 0.
    &quot; Entrée déjà existante
    &quot;&quot;  --&gt; Retourne l&apos;entrée
    rv_singleton_id = &lt;lfs_s_link_programm&gt;-singleton_id.

  ELSE.
    &quot; Pas de correspondance
    &quot;&quot;  --&gt; Lève une exception
    RAISE EXCEPTION TYPE cx_sy_no_current_match.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="LINK_PROGAMM_SINGLETON_ID_SET" VERSION="1" LANGU="F" DESCRIPT="Initialisation ID Trace" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="LINK_PROGAMM_SINGLETON_ID_SET" SCONAME="IV_PROGRAMM" VERSION="1" LANGU="F" DESCRIPT="ID Programme" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CLIKE"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL_ST" CMPNAME="LINK_PROGAMM_SINGLETON_ID_SET" SCONAME="IV_SINGLETON_ID" VERSION="1" LANGU="F" DESCRIPT="ID Singleton" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SYSUUID_X16"/>
   <source>METHOD link_progamm_singleton_id_set.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_link_programm_singleton TYPE zcl_runtime_and_memory_util_st=&gt;ty_link_programm_singleton.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation lien entre ID Programme et ID Singleton
  &quot; -----------------------------------------------------------

  TRY.
      &quot; Recherche si le lien existe déjà
      zcl_runtime_and_memory_util_st=&gt;link_progamm_singleton_id_get( iv_programm ).

    CATCH cx_sy_no_current_match.
      &quot; Lien inexistant
      &quot;&quot;  --&gt; Création d&apos;un nouveau lien
      ls_link_programm_singleton-programm     = iv_programm.
      ls_link_programm_singleton-singleton_id = iv_singleton_id.
      INSERT ls_link_programm_singleton INTO TABLE zcl_runtime_and_memory_util_st=&gt;gt_link_programm_singleton.

  ENDTRY.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <DTEL ROLLNAME="ZTEC_TAKE_MEMORY_SNAPSHOT" DOMNAME="FLAG" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="15" SCRLEN3="25" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D">
  <tpara/>
 </DTEL>
 <CLAS CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" VERSION="1" LANGU="F" DESCRIPT="Classe utilitaire pour temps de traitement/occupat° mémoire" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <types CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="TY_MEASUREMENT" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="8 " SRCCOLUMN1="4 " SRCROW2="21 " SRCCOLUMN2="26 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_measurement,
        id             TYPE ztec_id,
        seqnr          TYPE seqnr,
        time_start     TYPE timestamp,
        time_stop      TYPE timestamp,
        rtime_start    TYPE int4,
        rtime_end      TYPE int4,
        rtime_duration TYPE int4,
        mem_before     TYPE abap_msize,
        mem_after      TYPE abap_msize,
        mem_allocated  TYPE abap_msize,
        object_id      TYPE ztec_object_id,
        description    TYPE ztec_description,
      END OF ty_measurement
"/>
  <types CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="TY_MEASUREMENT_TAB" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="23 " SRCCOLUMN1="4 " SRCROW2="23 " SRCCOLUMN2="111 " TYPESRC_LENG="0 " TYPESRC="ty_measurement_tab TYPE STANDARD TABLE OF ty_measurement WITH NON-UNIQUE KEY primary_key COMPONENTS id seqnr
"/>
  <types CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="TY_MEASUREMENT_DATA" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="25 " SRCCOLUMN1="4 " SRCROW2="29 " SRCCOLUMN2="33 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_measurement_data,
        trace_memory  TYPE ztec_trace_conf-trace_memory,
        trace_runtime TYPE ztec_trace_conf-trace_runtime,
        snapshot      TYPE ztec_trace_conf-take_memory_snapshot,
      END OF   ty_measurement_data
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="MS_MEASUREMENT_CONF" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_MEASUREMENT_DATA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="MT_MEASUREMENT" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_MEASUREMENT_TAB" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="MV_LAST_ID" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR20" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="MV_RUNTIME_ID" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SYSUUID_X16" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="F" DESCRIPT="Instanciation de la classe" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="CONSTRUCTOR" SCONAME="IV_TRACE_DURATION" VERSION="1" LANGU="F" DESCRIPT="Trace durée d&apos;exécution ?" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_TRACE_RUNTIME" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="CONSTRUCTOR" SCONAME="IV_TRACE_MEMORY" VERSION="1" LANGU="F" DESCRIPT="Trace l&apos;Empreinte mémoire ?" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_TRACE_MEMORY" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="CONSTRUCTOR" SCONAME="IV_TAKE_SNAPSHOT_MEMORY" VERSION="1" LANGU="F" DESCRIPT="Capture empreinte mémoire" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_TAKE_MEMORY_SNAPSHOT" PARVALUE="ABAP_FALSE"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="CONSTRUCTOR" SCONAME="IV_RUNTIME_ID" VERSION="1" LANGU="F" DESCRIPT="ID Trace" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SYSUUID_X16" PAROPTIONL="X"/>
   <exception CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="CONSTRUCTOR" SCONAME="CX_SY_CREATE_OBJECT_ERROR" VERSION="1" LANGU="F" DESCRIPT="System-Exception bei Objekterzeugung" MTDTYPE="2" EDITORDER="1 "/>
   <source>*&amp;---------------------------------------------------------------------*
*&amp; Programme    : Trace de durée d&apos;exécution et d&apos;allocation mémoire   *
*&amp; Description  : Constructeur avec paramètres indiquant l&apos;activation  *
*&amp;                de traces pour:                                      *
*&amp;                  &gt; durée exécution                                  *
*&amp;                  &gt; allocation mémoire                               *
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *
METHOD constructor.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; ---------------------------------------------------
  &quot; Contrôle
  &quot; ---------------------------------------------------

  IF  iv_trace_memory         IS INITIAL
  AND iv_trace_duration       IS INITIAL
  AND iv_take_snapshot_memory IS INITIAL.
    &quot; Aucun paramètre
    RAISE EXCEPTION TYPE cx_sy_create_object_error.

  ENDIF.

  &quot; ---------------------------------------------------
  &quot; Détermination de la durée d&apos;exécution
  &quot; ---------------------------------------------------
  me-&gt;ms_measurement_conf-trace_runtime = iv_trace_duration.

  &quot; ---------------------------------------------------
  &quot; Détermination de la mémoire allouée
  &quot; ---------------------------------------------------
  me-&gt;ms_measurement_conf-trace_memory  = iv_trace_memory.

  &quot; ---------------------------------------------------
  &quot; Détermination de l&apos;autorisation de capture mémoire
  &quot; ---------------------------------------------------
  me-&gt;ms_measurement_conf-snapshot  = iv_take_snapshot_memory.

  &quot; ---------------------------------------------------
  &quot; Détermination Identifiant de la Trace
  &quot; ---------------------------------------------------

  IF NOT iv_runtime_id IS INITIAL.
    me-&gt;mv_runtime_id = iv_runtime_id.

  ELSE.
    TRY.
        me-&gt;mv_runtime_id = cl_system_uuid=&gt;create_uuid_x16_static( ).

      CATCH cx_uuid_error.
        &quot; Une erreur est survenue lors de la génération du GUID
        &quot;&quot;  --&gt; Utilisation nombre aléatoire
        me-&gt;mv_runtime_id = cl_abap_random=&gt;seed( ).

    ENDTRY.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="CREATE_RUNTIME_UTIL" VERSION="1" LANGU="F" DESCRIPT="Création instance Runtime (si nécessaire)" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="CREATE_RUNTIME_UTIL" SCONAME="IV_PROGRAMM" VERSION="1" LANGU="F" DESCRIPT="Nom du programme ABAP" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="CLIKE"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="CREATE_RUNTIME_UTIL" SCONAME="RO_RUNTIME" VERSION="1" LANGU="F" DESCRIPT="Classe utilitaire pour temps de traitement/occupat° mémoire" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_RUNTIME_AND_MEMORY_UTIL"/>
   <exception CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="CREATE_RUNTIME_UTIL" SCONAME="CX_SY_CREATE_OBJECT_ERROR" VERSION="1" LANGU="F" DESCRIPT="System-Exception bei Objekterzeugung" MTDTYPE="0" EDITORDER="1 "/>
   <source>*&amp;---------------------------------------------------------------------*
*&amp; Programme    : Trace de durée d&apos;exécution et d&apos;allocation mémoire   *
*&amp; Description  : Création instance Trace via table ZTEC_TRACE_CONF    *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *
METHOD create_runtime_util.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_ztec_trace_conf TYPE ztec_trace_conf.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_cx_object_error TYPE REF TO cx_sy_create_object_error.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Récupération paramétrage de Trace
  &quot; -----------------------------------------------------------

  &quot; Récupération paramètrage Trace d&apos;exécution / mémoire
  SELECT SINGLE * FROM ztec_trace_conf
                  INTO ls_ztec_trace_conf
                 WHERE programm EQ iv_programm.
  IF sy-subrc NE 0.
    &quot; Pas de Trace active
    &quot;&quot;  --&gt; Arrêt du traitement
    FREE : ro_runtime.
    RAISE EXCEPTION TYPE cx_sy_create_object_error.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Création Instance
  &quot; -----------------------------------------------------------

  TRY.
      &quot; Création instance Trace d&apos;exécution
      CREATE OBJECT ro_runtime
        EXPORTING
          iv_trace_memory         = ls_ztec_trace_conf-trace_memory
          iv_trace_duration       = ls_ztec_trace_conf-trace_runtime
          iv_take_snapshot_memory = ls_ztec_trace_conf-take_memory_snapshot.

    CATCH cx_sy_create_object_error INTO lo_cx_object_error.
      &quot; Une erreur est survenue
      RAISE EXCEPTION TYPE cx_sy_create_object_error
        EXPORTING
          previous = lo_cx_object_error.

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="EMPTY_DB_TABLE" VERSION="1" LANGU="F" DESCRIPT="Supprimer le contenu de la table" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="EMPTY_DB_TABLE" SCONAME="IV_TRACE_GUID" VERSION="1" LANGU="F" DESCRIPT='ID unique en format &quot;RAW&quot;' CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="GUID_16" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="EMPTY_DB_TABLE" SCONAME="IV_TRACE_ID" VERSION="1" LANGU="F" DESCRIPT="ID de trace" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_ID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="EMPTY_DB_TABLE" SCONAME="IV_TIMESTAMP_UTC_START" VERSION="1" LANGU="F" DESCRIPT="Horodatage UTC en abrégé (AAAAMMJJhhmmss)" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TIMESTAMP" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="EMPTY_DB_TABLE" SCONAME="IV_TIMESTAMP_UTC_END" VERSION="1" LANGU="F" DESCRIPT="Horodatage UTC en abrégé (AAAAMMJJhhmmss)" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TIMESTAMP" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="EMPTY_DB_TABLE" SCONAME="IV_EXEC_BY" VERSION="1" LANGU="F" DESCRIPT="Nom d&apos;utilisateur" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SYUNAME" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="EMPTY_DB_TABLE" SCONAME="IV_OBJECT_ID" VERSION="1" LANGU="F" DESCRIPT="ID Objet" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_OBJECT_ID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="EMPTY_DB_TABLE" SCONAME="EV_RETURN_CODE" VERSION="1" LANGU="F" DESCRIPT="Code retour" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="CHAR2"/>
   <source>*&amp;---------------------------------------------------------------------*
*&amp; Programme    : Trace de durée d&apos;exécution et d&apos;allocation mémoire   *
*&amp; Description  : Suppression de données de la table ztec_t_trace      *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *
METHOD empty_db_table.
***------------------------------------------------------------------***

**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_where   TYPE string,
    lv_and(3)  TYPE c,
    lv_exec_by TYPE syuname.

  CONSTANTS: lc_and(3) TYPE c VALUE &apos;AND&apos;.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  IF NOT iv_trace_guid IS INITIAL.
    lv_where  = lv_where &amp;&amp; lv_and &amp;&amp; | GUID_RUNTIME = &apos;| &amp;&amp; iv_trace_guid &amp;&amp; |&apos; |.
    lv_and    = lc_and.

  ENDIF.

  IF NOT iv_trace_id IS INITIAL.
    lv_where  = lv_where &amp;&amp; lv_and &amp;&amp; | ID = &apos;| &amp;&amp; iv_trace_id &amp;&amp; |&apos; |.
    lv_and    = lc_and.

  ENDIF.

  IF NOT iv_timestamp_utc_start IS INITIAL.
    lv_where  = lv_where &amp;&amp; lv_and &amp;&amp; | TIME_START GE &apos;| &amp;&amp; iv_timestamp_utc_start &amp;&amp; |&apos; |.
    lv_and    = lc_and.

  ENDIF.

  IF NOT iv_timestamp_utc_end IS INITIAL.
    lv_where  = lv_where &amp;&amp; lv_and &amp;&amp; | TIME_STOP LE &apos;| &amp;&amp; iv_timestamp_utc_end &amp;&amp; |&apos; |.
    lv_and = lc_and.

  ENDIF.

  IF NOT iv_exec_by IS INITIAL.
    lv_exec_by = iv_exec_by.
    TRANSLATE lv_exec_by TO UPPER CASE.
    lv_where  = lv_where &amp;&amp; lv_and &amp;&amp; | EXEC_BY = &apos;| &amp;&amp; lv_exec_by &amp;&amp; |&apos; |.
    lv_and = lc_and.

  ENDIF.

  IF NOT iv_object_id IS INITIAL.
    lv_where  = lv_where &amp;&amp; lv_and &amp;&amp; | OBJECT_ID =  &apos;| &amp;&amp; iv_object_id &amp;&amp; |&apos; |.
    lv_and = lc_and.

  ENDIF.

  IF lv_where IS INITIAL.
    DELETE FROM ztec_t_trace.

  ELSE.
    DELETE FROM ztec_t_trace WHERE (lv_where).

  ENDIF.

  IF sy-subrc EQ 0.
    ev_return_code = 0.

  ELSE.
    &quot; Erreur lors de la suppression
    ev_return_code = 99.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="END" VERSION="1" LANGU="F" DESCRIPT="Fin de la trace" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="END" SCONAME="IV_MEASURE_ID" VERSION="1" LANGU="F" DESCRIPT="Identifiant de la mesure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TY_MEASUREMENT-ID" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="END" SCONAME="IV_MEASURE_SEQNR" VERSION="1" LANGU="F" DESCRIPT="Numéro de séquence" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TY_MEASUREMENT-SEQNR" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="END" SCONAME="EV_SUBRC" VERSION="1" LANGU="F" DESCRIPT="Code retour d&apos;instructions ABAP" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-SUBRC"/>
   <source>*&amp;---------------------------------------------------------------------*
*&amp; Programme    : Trace de durée d&apos;exécution et d&apos;allocation mémoire   *
*&amp; Description  : Méthode pour terminer la prise de mesures            *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *
METHOD end.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  IF NOT iv_measure_id IS INITIAL.
    me-&gt;mv_last_id = iv_measure_id .

  ENDIF.

  &quot; ---------------------------------------------------
  &quot; Récupération des données de la trace (début traitement)
  &quot; ---------------------------------------------------
  READ TABLE me-&gt;mt_measurement WITH TABLE KEY id    = me-&gt;mv_last_id
                                               seqnr = iv_measure_seqnr
                                     ASSIGNING FIELD-SYMBOL(&lt;lfs_s_measurement&gt;).
  IF sy-subrc EQ 0.
    &quot; ---------------------------------------------------
    &quot; Allocation mémoire en début de traitement
    &quot; ---------------------------------------------------
    IF me-&gt;ms_measurement_conf-trace_runtime EQ abap_true.
      GET TIME STAMP FIELD  &lt;lfs_s_measurement&gt;-time_stop.
      GET RUN TIME FIELD    &lt;lfs_s_measurement&gt;-rtime_end.

    ENDIF.

    &quot; ---------------------------------------------------
    &quot; Allocation mémoire en fin de traitement
    &quot; ---------------------------------------------------
    IF me-&gt;ms_measurement_conf-trace_memory EQ abap_true.
      cl_abap_memory_utilities=&gt;get_total_used_size( IMPORTING size = &lt;lfs_s_measurement&gt;-mem_after ).

    ENDIF.
    &quot; ------------------------------------------------------
    &quot; Détermination des delta(durée/mémoire allouée)
    &quot; ------------------------------------------------------
    me-&gt;set_delta( CHANGING cs_measurement = &lt;lfs_s_measurement&gt; ).

  ENDIF.

  CLEAR me-&gt;mv_last_id.
  ev_subrc = sy-subrc.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="REFRESH_MEASURE_TAB" VERSION="1" LANGU="F" DESCRIPT="Vider la tables des mesures" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>*&amp;---------------------------------------------------------------------*
*&amp; Programme    : Trace de durée d&apos;exécution et d&apos;allocation mémoire   *
*&amp; Description  : RéInitialisation de la table des traces              *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *
METHOD refresh_measure_tab.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  FREE mt_measurement.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="SAVE_TO_DB" VERSION="1" LANGU="F" DESCRIPT="Sauvegarde des données de trace en DB" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="SAVE_TO_DB" SCONAME="IV_COMMIT" VERSION="1" LANGU="F" DESCRIPT="Commit ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG" PAROPTIONL="X"/>
   <source>*&amp;---------------------------------------------------------------------*
*&amp; Programme    : Trace de durée d&apos;exécution et d&apos;allocation mémoire   *
*&amp; Description  : Sauvegarde des mesures dans la table ztec_t_trace    *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

METHOD save_to_db.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
    lt_trace_db TYPE TABLE OF ztec_t_trace.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_trace_db TYPE ztec_t_trace.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_counter TYPE int4.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Génération du GUID d&apos;identifiant l&apos;exécution
  &quot; -----------------------------------------------------------
  ls_trace_db-mandt        = sy-mandt.
  ls_trace_db-exec_by      = sy-uname.
  ls_trace_db-exec_date    = sy-datum.
  ls_trace_db-exec_time    = sy-uzeit.
  ls_trace_db-guid_runtime = me-&gt;mv_runtime_id.

  &quot; -----------------------------------------------------------
  &quot; Préparation des données de traces
  &quot; -----------------------------------------------------------
  LOOP AT me-&gt;mt_measurement ASSIGNING FIELD-SYMBOL(&lt;lfs_s_measurement&gt;).

    ADD 1 TO ls_trace_db-trace_no.
    MOVE-CORRESPONDING &lt;lfs_s_measurement&gt; TO ls_trace_db.
    APPEND ls_trace_db TO lt_trace_db.

  ENDLOOP.

  &quot; -----------------------------------------------------------
  &quot; Sauvegarde des données
  &quot; -----------------------------------------------------------
  IF lt_trace_db[] IS NOT INITIAL.
    DELETE FROM ztec_t_trace WHERE guid_runtime = me-&gt;mv_runtime_id.
    INSERT ztec_t_trace FROM TABLE lt_trace_db.
    IF iv_commit EQ abap_true.
      CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;
        EXPORTING
          wait = abap_true.

    ENDIF.

  ELSE.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="SET_DELTA" VERSION="1" LANGU="F" DESCRIPT="Détermination de la durée d&apos;exécution et mémoire allouée" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="SET_DELTA" SCONAME="CS_MEASUREMENT" VERSION="1" LANGU="F" DESCRIPT="Identifiant de la mesure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_MEASUREMENT"/>
   <source>*&amp;---------------------------------------------------------------------*
*&amp; Programme    : Trace de durée d&apos;exécution et d&apos;allocation mémoire   *
*&amp; Description  : Méthode pour calculer                                *
*                 &gt; la durée d&apos;exécution                               *
*                 &gt; l&apos;espace mémoire allouée                           *
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *
METHOD set_delta.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; ---------------------------------------------------
  &quot; Détermination de la durée d&apos;exécution
  &quot; ---------------------------------------------------
  IF me-&gt;ms_measurement_conf-trace_runtime EQ abap_true.
    IF NOT cs_measurement-rtime_end IS INITIAL.
      cs_measurement-rtime_duration = cs_measurement-rtime_end - cs_measurement-rtime_start.

    ENDIF.

  ENDIF.

  &quot; ---------------------------------------------------
  &quot; Détermination de l&apos;espace mémoire allouée
  &quot; ---------------------------------------------------
  IF me-&gt;ms_measurement_conf-trace_memory EQ abap_true.
    IF NOT cs_measurement-mem_after IS INITIAL.
      cs_measurement-mem_allocated = cs_measurement-mem_after - cs_measurement-mem_before.

    ENDIF.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="START" VERSION="1" LANGU="F" DESCRIPT="Début de la trace" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="START" SCONAME="IV_MEASURE_ID" VERSION="1" LANGU="F" DESCRIPT="Identifiant de la mesure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TY_MEASUREMENT-ID" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="START" SCONAME="IV_MEASURE_SEQNR" VERSION="1" LANGU="F" DESCRIPT="Numéro de séquence" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TY_MEASUREMENT-SEQNR" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="START" SCONAME="IV_MEASURE_OBJID" VERSION="1" LANGU="F" DESCRIPT="ID d&apos;objet traité" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TY_MEASUREMENT-OBJECT_ID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="START" SCONAME="IV_MEASURE_DESC" VERSION="1" LANGU="F" DESCRIPT="Description" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TY_MEASUREMENT-DESCRIPTION" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="START" SCONAME="EV_SEQNR" VERSION="1" LANGU="F" DESCRIPT="Numéro de séquence" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="SEQNR"/>
   <source>*&amp;---------------------------------------------------------------------*
*&amp; Programme    : Trace de durée d&apos;exécution et d&apos;allocation mémoire   *
*&amp; Description  : Méthode pour démarrer la prise de mesures            *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*                                                                      *
METHOD start.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_measurement TYPE ty_measurement.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; ---------------------------------------------------
  &quot; Identification de la trace effectuée
  &quot; ---------------------------------------------------
  ls_measurement-id          = iv_measure_id.
  ls_measurement-seqnr       = iv_measure_seqnr.
  ls_measurement-object_id   = iv_measure_objid.
  ls_measurement-description = iv_measure_desc.

  &quot; ---------------------------------------------------
  &quot; Temps en début de traitement
  &quot; ---------------------------------------------------
  IF me-&gt;ms_measurement_conf-trace_runtime EQ abap_true.
    GET TIME STAMP FIELD ls_measurement-time_start.
    GET RUN TIME FIELD ls_measurement-rtime_start.

  ENDIF.

  &quot; ---------------------------------------------------
  &quot; Allocation mémoire en début de traitement
  &quot; ---------------------------------------------------
  IF me-&gt;ms_measurement_conf-trace_memory EQ abap_true.
    cl_abap_memory_utilities=&gt;get_total_used_size( IMPORTING size = ls_measurement-mem_before ).

  ENDIF.

  INSERT ls_measurement INTO TABLE me-&gt;mt_measurement.

  &quot; ---------------------------------------------------
  &quot; Stockage ID du dernier start
  &quot; ---------------------------------------------------
  me-&gt;mv_last_id = iv_measure_id.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="STOP" VERSION="1" LANGU="F" DESCRIPT="Fin de la trace (identique à méthode END)" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="STOP" SCONAME="IV_MEASURE_ID" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TY_MEASUREMENT-ID" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="STOP" SCONAME="IV_MEASURE_SEQNR" VERSION="1" LANGU="F" DESCRIPT="Numéro de séquence" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TY_MEASUREMENT-SEQNR" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="STOP" SCONAME="EV_SUBRC" VERSION="1" LANGU="F" DESCRIPT="Code retour d&apos;instructions ABAP" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-SUBRC"/>
   <source>*&amp;---------------------------------------------------------------------*
*&amp; Programme    : Trace de durée d&apos;exécution et d&apos;allocation mémoire   *
*&amp; Description  : Méthode pour terminer la prise de mesures            *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *
METHOD stop.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; Equivalent à l&apos;appel à la méthode END
  me-&gt;end(
    EXPORTING
       iv_measure_id    = iv_measure_id     &quot; Identifiant de la mesure
       iv_measure_seqnr = iv_measure_seqnr  &quot; Numéro de séquence
     IMPORTING
       ev_subrc         = ev_subrc          &quot; Code retour d&apos;instructions ABAP
  ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_RUNTIME_AND_MEMORY_UTIL" CMPNAME="TAKE_SNAPSHOT_MEMORY" VERSION="1" LANGU="F" DESCRIPT="Capture empreinte mémoire" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD take_snapshot_memory.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  cl_abap_memory_utilities=&gt;write_memory_consumption_file( ).

ENDMETHOD.</source>
  </method>
 </CLAS>
</nugget>
